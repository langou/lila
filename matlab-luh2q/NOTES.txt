
Papers

* software paper on the new subroutines

  - present the interface, design choices

  - present the test suite

  - present three ways to program the code

    o one block of columns at a time

    o many levels of blocking

    o recursive code for QR factorization

  - present also the cons and pros of the new approach with timing experiments

  - comparison with state of the arts

    o it can be said that everything we have been doing can be done with LAPACK by rewriting the code
      since LAPACK recompute T at each call of each subrroutines, it is very easy for LAPACK to change the NB to 

    o internal blocking in PLASMA

    o recursive of paper of Gustavson

      ^ the main structure is about the same

      ^ we are adding the mt to limit the number of flops

      ^ and we are able to break the recusion in three ways, four ways, etc. instead of limiting with a recursion that divides by 2

  - main feature of the new Householder QR fatorization suite

    o limited blocking with mt

    o we pass the T in all of our subroutines (as opposed to recompute it)

    o compact representation "that extends naturally" no matter

  - consequences of these features

    o decoupling of the algorithmic block size, with the use block size

    o we can do re

  - extensions

    o 1D data distribution and with MPI

    o MGS and the T matrix of MGS

* paper on Householder reconstruction

  - code the Householder reconstruction of Demmel

  - study the reconstruction quality as a function of the quality of Q + proof

  - two applications

    o use CholeskyQR to construct Q, then reconstruct to get V (and H and T), then apply V (block Gram-Schmidt process)

    o write a ``better`` [Q1,R1] = qrinsert(Q,R,n+1,X,'col') subroutines where X is a block of vectors

    o try to break other block Gram-Schmidt algorithm


    
